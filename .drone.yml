pipeline:

  run-testrunner-tests:
    image: quay.io/ukhomeofficedigital/tf-testrunner:32
    commands:
      - python -m unittest tests/e2e.py
    secrets:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
    when:
      event: push

#   init-test:
#     image: quay.io/ukhomeofficedigital/dq-docker-terragrunt:v0.23.18
#     pull: true
#     commands:
#       - export MOCK_ID=$${AWS_ACCESS_KEY_ID}
#       - export MOCK_KEY=$${AWS_SECRET_ACCESS_KEY}
#       - export TF_VAR_ENV_ACCT_ID=$${AWS_ACCESS_KEY_ID}
#       - export TF_VAR_ENV_ACCT_KEY=$${AWS_SECRET_ACCESS_KEY}
#       - echo "provider \"aws\" { region = \"eu-west-2\" }" > provider.tf
#       - echo -e "terraform {\n  backend \"s3\" {}\n}" > backend.tf
#       - echo -e "remote_state {\n  backend = \"s3\"\n  config = {\n  bucket = \"dacc-dq-test-coral-team\"\n  region = \"eu-west-2\"\n  dynamodb_table = \"terraform-state\"\n  key = \"test/dq-tf-api-kafka-pipeline.tfstate\"\n  encrypt = true \n  }\n}" > terragrunt.hcl
#       - terragrunt init
#     when:
#       event: push
#       branch:
#         exclude: [ master ]
#     secrets:
#       - AWS_ACCESS_KEY_ID
#       - AWS_SECRET_ACCESS_KEY
#
#   testsuite:
#     image: docker:18.05
#     environment:
#       - DOCKER_HOST=tcp://172.17.0.1:2375
#     commands:
#       - docker run --rm -v $(pwd):/data -w /data hashicorp/terraform fmt --diff --check
#     when:
#       event: push
#       branch:
#         exclude: [ master ]
#     secrets:
#       - AWS_ACCESS_KEY_ID
#       - AWS_SECRET_ACCESS_KEY
#
#   validate-test:
#     image: quay.io/ukhomeofficedigital/dq-docker-terragrunt:v0.23.18
#     commands:
#       - export TF_VAR_ENV_ACCT_ID=$${AWS_ACCESS_KEY_ID}
#       - export TF_VAR_ENV_ACCT_KEY=$${AWS_SECRET_ACCESS_KEY}
#       - export MOCK_ID=${TEST_AWS_ACCESS_KEY_ID}
#       - export MOCK_KEY=${TEST_AWS_SECRET_ACCESS_KEY}
#       - terragrunt validate
#     when:
#       event: push
#       branch:
#         exclude: [ master ]
#     secrets:
#       - TF_VAR_MOCK_ID
#       - TF_VAR_MOCK_KEY
#       - AWS_ACCESS_KEY_ID
#       - AWS_SECRET_ACCESS_KEY
#
#   plan-test:
#     image: quay.io/ukhomeofficedigital/dq-docker-terragrunt:v0.23.18
#     commands:
#       - export MOCK_ID=${TEST_AWS_ACCESS_KEY_ID}
#       - export MOCK_KEY=${TEST_AWS_SECRET_ACCESS_KEY}
#       - export TF_VAR_ENV_ACCT_ID=$${AWS_ACCESS_KEY_ID}
#       - export TF_VAR_ENV_ACCT_KEY=$${AWS_SECRET_ACCESS_KEY}
#       - terragrunt plan -lock=false -out=plan
#     when:
#       event: push
#       branch:
#         exclude: [ master ]
#     secrets:
#       - TF_VAR_MOCK_ID
#       - TF_VAR_MOCK_KEY
#       - AWS_ACCESS_KEY_ID
#       - AWS_SECRET_ACCESS_KEY
#
#   apply-test:
#     image: quay.io/ukhomeofficedigital/dq-docker-terragrunt:v0.23.18
#     commands:
#       - export MOCK_ID=${TEST_AWS_ACCESS_KEY_ID}
#       - export MOCK_KEY=${TEST_AWS_SECRET_ACCESS_KEY}
#       - terragrunt apply -auto-approve -parallelism=50 plan
#     when:
#       event: push
#       branch:
#         exclude: [ master , plan/* ]
#     secrets:
#       - TF_VAR_MOCK_ID
#       - TF_VAR_MOCK_KEY
#       - AWS_ACCESS_KEY_ID
#       - AWS_SECRET_ACCESS_KEY
#
# # Notprod deployment
#   init-notprod:
#     image: quay.io/ukhomeofficedigital/dq-docker-terragrunt:v0.23.18
#     pull: true
#     commands:
#       - export TF_VAR_ENV_ACCT_ID=$${NOTPROD_ACC_ID}
#       - export TF_VAR_ENV_ACCT_KEY=$${NOTPROD_ACC_KEY}
#       - echo -e "terraform {\n  backend \"s3\" {}\n}" > backend.tf
#       - echo -e "remote_state {\n  backend = \"s3\"\n  config = {\n  bucket = \"dacc-dq-test-yellow-team\"\n  region = \"eu-west-2\"\n  dynamodb_table = \"terraform-state\"\n  key = \"notprod/dq-tf-api-kafka-pipeline-new.tfstate\"\n  encrypt = true \n }\n}" > terragrunt.hcl
#       - terragrunt init
#     environment:
#       - TF_VAR_namespace=notprod
#       - TF_VAR_naming_suffix=apps-notprod-dq
#     when:
#       event: push
#     secrets:
#       - NOTPROD_ACC_ID
#       - NOTPROD_ACC_KEY
#       - AWS_ACCESS_KEY_ID
#       - AWS_SECRET_ACCESS_KEY
#
#   plan-notprod:
#     image: quay.io/ukhomeofficedigital/dq-docker-terragrunt:v0.23.18
#     pull: true
#     commands:
#       - export TF_VAR_ENV_ACCT_ID=$${NOTPROD_ACC_ID}
#       - export TF_VAR_ENV_ACCT_KEY=$${NOTPROD_ACC_KEY}
#       - terragrunt plan -lock=false -out=plan
#     environment:
#       - TF_VAR_namespace=notprod
#       - TF_VAR_naming_suffix=apps-notprod-dq
#     when:
#       branch: [ master , plan/* ]
#       event: push
#     secrets:
#       - AWS_ACCESS_KEY_ID
#       - AWS_SECRET_ACCESS_KEY
#       - NOTPROD_ACC_ID
#       - NOTPROD_ACC_KEY
#
#   apply-notprod:
#     image: quay.io/ukhomeofficedigital/dq-docker-terragrunt:v0.23.18
#     pull: true
#     commands:
#       - export TF_VAR_ENV_ACCT_ID=$${NOTPROD_ACC_ID}
#       - export TF_VAR_ENV_ACCT_KEY=$${NOTPROD_ACC_KEY}
#       - terragrunt apply -auto-approve -parallelism=50 plan
#     environment:
#       - TF_VAR_namespace=notprod
#       - TF_VAR_naming_suffix=apps-notprod-dq
#     when:
#       branch:
#         include: [ master ]
#         exclude: [ plan/* ]
#       event: push
#     secrets:
#       - AWS_ACCESS_KEY_ID
#       - AWS_SECRET_ACCESS_KEY
#       - NOTPROD_ACC_ID
#       - NOTPROD_ACC_KEY
#
# ## production
#   init-prod:
#     image: quay.io/ukhomeofficedigital/dq-docker-terragrunt:v0.23.18
#     commands:
#       - export TF_VAR_ENV_ACCT_ID=$${PROD_ACC_ID}
#       - export TF_VAR_ENV_ACCT_KEY=$${PROD_ACC_KEY}
#       - echo -e "terraform {\n  backend \"s3\" {}\n}" > backend.tf
#       - echo -e "remote_state {\n  backend = \"s3\"\n  config = {\n  bucket = \"dacc-dq-test-yellow-team\"\n  region = \"eu-west-2\"\n  dynamodb_table = \"terraform-state\"\n  key = \"prod/dq-tf-api-kafka-pipeline-new.tfstate\"\n  encrypt = true \n }\n}" > terragrunt.hcl
#       - terragrunt init -reconfigure
#     environment:
#       - TF_VAR_namespace=prod
#       - TF_VAR_naming_suffix=apps-prod-dq
#     when:
#       event: [deployment, push]
#     secrets:
#       - AWS_ACCESS_KEY_ID
#       - AWS_SECRET_ACCESS_KEY
#       - PROD_ACC_ID
#       - PROD_ACC_KEY
#
#   plan-prod:
#     image: quay.io/ukhomeofficedigital/dq-docker-terragrunt:v0.23.18
#     pull: true
#     commands:
#       - export TF_VAR_ENV_ACCT_ID=$${PROD_ACC_ID}
#       - export TF_VAR_ENV_ACCT_KEY=$${PROD_ACC_KEY}
#       - terragrunt plan -lock=false -out=prodplan
#     environment:
#       - TF_VAR_namespace=prod
#       - TF_VAR_naming_suffix=apps-prod-dq
#     when:
#       branch: [ master , plan/* ]
#       event: [deployment, push]
#     secrets:
#       - AWS_ACCESS_KEY_ID
#       - AWS_SECRET_ACCESS_KEY
#       - PROD_ACC_ID
#       - PROD_ACC_KEY
#
#   apply-prod:
#     image: quay.io/ukhomeofficedigital/dq-docker-terragrunt:v0.23.18
#     pull: true
#     commands:
#       - export TF_VAR_ENV_ACCT_ID=$${PROD_ACC_ID}
#       - export TF_VAR_ENV_ACCT_KEY=$${PROD_ACC_KEY}
#       - terragrunt apply -auto-approve -parallelism=50 prodplan
#     environment:
#       - TF_VAR_namespace=prod
#       - TF_VAR_naming_suffix=apps-prod-dq
#     when:
#       branch: master
#       environment: prod
#       event: deployment
#     secrets:
#       - AWS_ACCESS_KEY_ID
#       - AWS_SECRET_ACCESS_KEY
#       - PROD_ACC_ID
#       - PROD_ACC_KEY
#
#   sonar-scanner:
#     image: quay.io/ukhomeofficedigital/sonar-scanner:v3.0.3
#     when:
#       event:
#         - push
#         - pull_request
#       environment:
#         exclude: [ production ]
